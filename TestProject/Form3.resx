<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHwAAABzCAMAAABtlpZZAAAABGdBTUEAALGPC/xhBQAAAD9QTFRFmZmZ
        ////rq6ulpaWkpKSjo6O/Pz8tLS0+Pj45ubm8PDwubm5pqamnZ2d7Ozso6Oj0tLSx8fH3t7ev7+/2NjY
        8QMpVwAAA7VJREFUaEPtmtmWgyAMQNWA+67//62DbTqtCkmA9vjifZoz03IHWQKJSRpEv05F2yVJ0g3Z
        MlYl/tqTAHk9ZkoBgFFvmJ+UHqYK/+qDt3wu3t435nfdVONHxPjJ87VVZzMCyeKp95JXrUKRHYDJa/Q9
        5GVDqzdUN+OnJcjls2WoLegGPy9ALJ80ts4BnfjRS+UF/8hfgOrxSxwyeZ6JHvkLJRx4kdzTbTovs4vk
        hafb2EUbnkS+yMf7n06y3wjka4A7gQy/TcHL6xC3mXQTfp+Al7feA/5E8wuOlY/SzeVEhy244eR5YL8N
        asQ2nHDyKWzEH0COjbhg5GV4xwVdZ+RjRMfNqDNdp+X5gM2EoZldlpZXwVP9ARTYjgNavsQMuQHo0E7K
        I586+9xJeR813QxAn6lIedxc3xjI+U7Km8ghN10nIyspb7GJcBR5qKDk+XYTjIPe5Ch5Hf3UEyCjOiXv
        vyBfsC0rlLz6gpzc4265jUvll064S5fapZvMpdvrtYElPqS22JIdUh5/mCAnOy2/9Bh16QHy2qNzHrfY
        NJMcoeWR850+PrLyiBty/EUx7oqMbTjh5Ck2FIBesQknrHwOnfAwYAtuWHnqm318IcjA8vLA5MR3UmGX
        JgGDZrws6S6R+yTbERCl3EXyNPO00weYf2Ryz74L3VJ5usiXOyTfLXMYxDlY1X69wGNieydZ8CBZ3y/k
        8q2ox+phENZ2HnjITeeJSuoGwMTlend4yU2YGYhCrvKrpHrLzXG60DY/6G706vUGIS/HzB6S56bbqvcv
        LSgNmb14XkM2Ek/DKe+LrX1XfayepyYbhm4Y2mIZe0ef88H8Z6pwLnuHvMaZDQlx2co38GcbWIgE1Tga
        scvn5LWdQuI5iT74P4aoxL4ArfLPGAqi2qCF/DMa2bcem3xfvpRv1TvK/fFL2a6MFvmpdCqsCe+oj5ux
        zX6WWy4p2mO/frKe9wLLFeIkr23RyyNSPbCGf32aPCe5/UoO7NXnA9erHaeD/FHuvCPAIDye1M4z1ylV
        cJS7cxEA7q3qTb0Qb7Qcu36Qk9kAo6/I4JH3DfkyzfG+fpAzyS/QrTtsliMT7k/Fpr1ckHNUxn8OJHk/
        Zdo11m8OxdW9vBedEkGrtpnWqi4NdbVOTWuiKv6R5PA2wV7ukQUxURxhnvUnhwW7l8emvjgOScG93P9t
        HD8OubG9PMMP/Yz9xfkg/3XPb/mTW/7klv+KW47c8ie3/FfccuSWP7nlv+KWI7f8yS3/FTt5mv4B5Lkt
        OnSmv4UAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>