<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ErrorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UFoO1vcUoWZWSg/mjVEp2ZFBIQBAEAQBAEB//9k=
</value>
  </data>
</root>